{"ast":null,"code":"import React,{useState,useEffect}from'react';import\"./TaskManager.css\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function TaskManager(){const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState({date:'',text:'',completed:false,editing:false,isToday:true});const[isAdding,setIsAdding]=useState(false);const[isEditing,setIsEditing]=useState(false);useEffect(()=>{fetchTasks();},[]);const handleAddTask=async()=>{try{await axios.post('http://localhost:5000/tasks',newTask);console.log(newTask);setNewTask({date:'',text:'',completed:false,editing:false,isToday:true});fetchTasks();}catch(error){console.error('Error adding task:',error);}};const handleInputChange=e=>{const{name,value}=e.target;setNewTask({...newTask,[name]:value});};const fetchTasks=async()=>{try{const response=await axios.get('http://localhost:5000/tasks');setTasks(response.data.data);console.log(response.data.data);}catch(error){console.error('Error fetching products:',error);}};const handleDeleteTask=async id=>{if(window.confirm(`Biztosan törölni szeretnéd?`)){await axios.post('http://localhost:5000/delete',{taskid:id});}fetchTasks();};const handleEditTaskChange=async id=>{setIsAdding(false);const response=await axios.get('http://localhost:5000/edittaskchange',{params:{taskid:id}});const thisTaskEditing=response.data.data;fetchTasks();setNewTask({date:response.data.date,text:response.data.text,completed:false,editing:false,isToday:true});if(isEditing&&!thisTaskEditing){alert(\"Fejezd be a jelenlegi módosításaidat!\");}else{await axios.post('http://localhost:5000/edittaskchange',{taskid:id});setIsEditing(!isEditing);fetchTasks();setNewTask({date:'',text:'',completed:false,editing:false,isToday:true});}fetchTasks();};const handleEditTask=async id=>{await axios.post('http://localhost:5000/edittask',{taskid:id,text:newTask.text,date:newTask.date});setIsEditing(false);handleEditTaskChange(id);setNewTask({date:'',text:'',completed:false,editing:false,isToday:true});};const handleToggleComplete=async id=>{try{await axios.post('http://localhost:5000/togglecomplete',{taskid:id});fetchTasks();}catch(error){console.error('Hiba történt a feladat állapotának módosításakor:',error);}};const handleCheckboxChange=async event=>{try{if(event.target.checked){await Promise.all(tasks.map(task=>isDateToday(task.date)?Promise.resolve():axios.post('http://localhost:5000/istoday',{taskid:task._id,today:false})));}else{await Promise.all(tasks.map(task=>axios.post('http://localhost:5000/istoday',{taskid:task._id,today:true})));}}catch(error){console.error('Hiba történt a checkbox állapot frissítésekor:',error);}fetchTasks();};function isDateToday(inputDate){const[inputYear,inputMonth,inputDay]=inputDate.split('-').map(Number);const inputDateObj=new Date(inputYear,inputMonth-1,inputDay);const today=new Date();const todayDateObj=new Date(today.getFullYear(),today.getMonth(),today.getDate());return inputDateObj.getTime()===todayDateObj.getTime();}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"taskManager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inputs\",children:[!isAdding&&/*#__PURE__*/_jsx(\"button\",{id:\"addButton\",onClick:()=>setIsAdding(true),children:\"\\xDAj feladat hozz\\xE1ad\\xE1sa\"}),isAdding&&/*#__PURE__*/_jsxs(\"div\",{className:\"inputdata\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date\",value:newTask.date,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"textarea\",{value:newTask.text,name:\"text\",onChange:handleInputChange,placeholder:\"Adj hozz\\xE1 egy feladatot\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTask,children:\"Hozz\\xE1ad\\xE1s\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAdding(false),children:\"M\\xE9gse\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",title:\"todaybox\",onChange:handleCheckboxChange}),\"Mai hat\\xE1rid\\u0151\"]}),/*#__PURE__*/_jsx(\"ul\",{children:Array.isArray(tasks)&&tasks.map(task=>task.isToday&&/*#__PURE__*/_jsxs(\"li\",{style:{backgroundColor:task.completed?'green':'rgba(0,0,0,0)'},children:[!task.editing&&/*#__PURE__*/_jsxs(\"div\",{children:[task.text,\" | Hat\\xE1rid\\u0151: \",task.date,/*#__PURE__*/_jsxs(\"div\",{className:\"taskButtons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleComplete(task._id),children:task.completed?'Visszaállítás':'Kész'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteTask(task._id),children:\"T\\xF6rl\\xE9s\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditTaskChange(task._id),children:\"M\\xF3dos\\xEDt\\xE1s\"})]})]}),task.editing&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date\",value:newTask.date,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"textarea\",{name:\"text\",value:newTask.text,onChange:handleInputChange,rows:\"1\",cols:\"30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"taskButtons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditTask(task._id),children:\"Hozz\\xE1ad\\xE1s\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditTaskChange(task._id),children:\"M\\xE9gse\"})]})]})]},task.id))})]})});}export default TaskManager;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskManager","tasks","setTasks","newTask","setNewTask","date","text","completed","editing","isToday","isAdding","setIsAdding","isEditing","setIsEditing","fetchTasks","handleAddTask","post","console","log","error","handleInputChange","e","name","value","target","response","get","data","handleDeleteTask","id","window","confirm","taskid","handleEditTaskChange","params","thisTaskEditing","alert","handleEditTask","handleToggleComplete","handleCheckboxChange","event","checked","Promise","all","map","task","isDateToday","resolve","_id","today","inputDate","inputYear","inputMonth","inputDay","split","Number","inputDateObj","Date","todayDateObj","getFullYear","getMonth","getDate","getTime","children","className","onClick","type","onChange","placeholder","title","Array","isArray","style","backgroundColor","rows","cols"],"sources":["D:/School/referencia/webapp/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./TaskManager.css\"\r\nimport axios from 'axios';\r\n\r\nfunction TaskManager (){\r\n    const [tasks,setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState({\r\n      date:'',\r\n      text:'',\r\n      completed: false,\r\n      editing: false,\r\n      isToday: true\r\n    });\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n      fetchTasks();\r\n    }, []);\r\n\r\n    \r\n\r\n    const handleAddTask = async () => {\r\n        try {\r\n          await axios.post('http://localhost:5000/tasks', newTask);\r\n          console.log(newTask);\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n          fetchTasks();\r\n        } catch (error) {\r\n          console.error('Error adding task:', error);\r\n        }\r\n      };\r\n\r\n\r\n      const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewTask({\r\n          ...newTask,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n      const fetchTasks = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/tasks');\r\n          setTasks(response.data.data);\r\n          console.log(response.data.data); \r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      };\r\n    \r\n      const handleDeleteTask = async (id) => {\r\n        if (window.confirm(`Biztosan törölni szeretnéd?`)) {\r\n          await axios.post('http://localhost:5000/delete', {taskid: id});   \r\n        }  \r\n          fetchTasks();\r\n      };\r\n\r\n      const handleEditTaskChange = async (id) => {\r\n        setIsAdding(false)\r\n        const response = await axios.get('http://localhost:5000/edittaskchange', {params:{taskid: id}});\r\n        const thisTaskEditing = response.data.data\r\n        fetchTasks();\r\n        setNewTask({\r\n          date:response.data.date,\r\n          text:response.data.text,\r\n          completed: false,\r\n          editing: false,\r\n          isToday: true\r\n        });\r\n\r\n        if(isEditing && !thisTaskEditing){\r\n            alert(\"Fejezd be a jelenlegi módosításaidat!\")\r\n        }\r\n        else{\r\n          await axios.post('http://localhost:5000/edittaskchange', {taskid: id})\r\n        setIsEditing(!isEditing)\r\n        fetchTasks();\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n        \r\n        }\r\n        fetchTasks();\r\n      };\r\n\r\n      const handleEditTask = async (id) => {\r\n        \r\n          await axios.post('http://localhost:5000/edittask', {taskid: id, text:newTask.text, date:newTask.date});\r\n          setIsEditing(false);\r\n          handleEditTaskChange(id);\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n      };\r\n    \r\n      const handleToggleComplete = async (id) => {\r\n        try {\r\n          await axios.post('http://localhost:5000/togglecomplete', { taskid: id });\r\n          fetchTasks();\r\n        } catch (error) {\r\n          console.error('Hiba történt a feladat állapotának módosításakor:', error);\r\n        }\r\n      };\r\n\r\n      const handleCheckboxChange = async (event) => {\r\n        try {\r\n          \r\n          if (event.target.checked) {\r\n            await Promise.all(\r\n              tasks.map((task) =>\r\n                isDateToday(task.date)\r\n                  ? Promise.resolve() \r\n                  : axios.post('http://localhost:5000/istoday', { taskid: task._id, today: false })\r\n              )\r\n            );\r\n          } else {\r\n            \r\n            await Promise.all(\r\n              tasks.map((task) =>\r\n                axios.post('http://localhost:5000/istoday', { taskid: task._id, today: true })\r\n              )\r\n            );\r\n          } \r\n        } catch (error) {\r\n          console.error('Hiba történt a checkbox állapot frissítésekor:', error);\r\n        }\r\n        fetchTasks();\r\n      };\r\n      \r\n\r\n      function isDateToday(inputDate) {\r\n       \r\n        const [inputYear, inputMonth, inputDay] = inputDate.split('-').map(Number);\r\n        const inputDateObj = new Date(inputYear, inputMonth - 1, inputDay);\r\n        const today = new Date();\r\n        const todayDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n      \r\n        \r\n        return inputDateObj.getTime() === todayDateObj.getTime();\r\n      }\r\n\r\n      \r\n\r\n    return(\r\n        <>\r\n        <div className='taskManager'>\r\n            <div className='inputs'>\r\n            {!isAdding && (\r\n                <button id='addButton' onClick={() => setIsAdding(true)}>Új feladat hozzáadása</button>\r\n            )}\r\n\r\n            {isAdding && (\r\n                    <div className='inputdata'>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        value={newTask.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <textarea\r\n                        value={newTask.text}\r\n                        name=\"text\"\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Adj hozzá egy feladatot\"\r\n                    />\r\n                    <button onClick={handleAddTask}>Hozzáadás</button>\r\n                    <button onClick={() => setIsAdding(false)}>Mégse</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <p><input\r\n                type=\"checkbox\"\r\n                title=\"todaybox\"\r\n                onChange={handleCheckboxChange}\r\n                />\r\n                Mai határidő\r\n                </p>\r\n            <ul>\r\n        {Array.isArray(tasks) && tasks.map((task) => (\r\n            task.isToday && (\r\n          <li key={task.id} style={{ backgroundColor: task.completed ? 'green' : 'rgba(0,0,0,0)' }}>\r\n            {!task.editing && (<div>\r\n            {task.text } | Határidő: {task.date}\r\n            <div className='taskButtons'>\r\n            <button onClick={() => handleToggleComplete(task._id)}>\r\n              {task.completed ? 'Visszaállítás' : 'Kész'}\r\n            </button>\r\n            <button onClick={() => handleDeleteTask(task._id)}>Törlés</button>\r\n            <button onClick={() => handleEditTaskChange(task._id)}>Módosítás</button></div>\r\n            </div>)}\r\n            \r\n            {task.editing && (<div>\r\n                <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        value={newTask.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <textarea\r\n                        name=\"text\"\r\n                        value={newTask.text}\r\n                        onChange={handleInputChange}\r\n                        rows=\"1\" \r\n                        cols=\"30\" \r\n                    />\r\n                    <div className='taskButtons'>\r\n                    <button onClick={() =>handleEditTask(task._id)}>Hozzáadás</button>\r\n                    <button onClick={() => handleEditTaskChange(task._id)}>Mégse</button></div>\r\n                </div>)} \r\n          </li>\r\n          )\r\n        ))}\r\n      </ul>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TaskManager"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}