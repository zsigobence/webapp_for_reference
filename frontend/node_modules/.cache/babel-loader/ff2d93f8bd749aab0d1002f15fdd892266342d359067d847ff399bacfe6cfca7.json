{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\referencia\\\\webapp\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./TaskManager.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nfunction TaskManager() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    date: '',\n    text: '',\n    completed: false,\n    editing: false,\n    isToday: true\n  });\n  const [taskText, setTaskText] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const handleAddTask = async () => {\n    try {\n      await axios.post('http://localhost:5000/tasks', newTask);\n      setNewTask({\n        date: '',\n        text: '',\n        completed: false,\n        editing: false,\n        isToday: true\n      });\n      fetchProducts();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProduct({\n      ...newProduct,\n      [name]: value\n    });\n  };\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/tasks');\n      setTasks(response.data.data);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    if (window.confirm(`Biztosan törölni szeretnéd?`)) {\n      await axios.post('http://localhost:5000/delete', {\n        taskid: id\n      });\n    }\n    fetchProducts();\n  };\n  const handleEditTaskChange = async id => {\n    setIsAdding(false);\n    const thisTaskEditing = await axios.get('http://localhost:5000/edittaaskchange', {\n      taskid: id\n    });\n    if (isEditing && !thisTaskEditing.data.data) {\n      alert(\"Fejezd be a jelenlegi módosításaidat!\");\n    } else {\n      await axios.post('http://localhost:5000/edittaskchange', {\n        taskid: id\n      });\n      setIsEditing(!isEditing);\n    }\n  };\n  const handleEditTask = async id => {\n    setTasks(await axios.post('http://localhost:5000/edittask', {\n      taskid: id,\n      text: taskText,\n      date: deadline\n    }));\n    setIsEditing(false);\n    setTaskText('');\n    setDeadline('');\n  };\n  const handleToggleComplete = async id => {\n    await axios.post('http://localhost:5000/togglecomplete', {\n      taskid: id\n    });\n  };\n  const handleCheckboxChange = async event => {\n    if (event.target.checked) {\n      tasks.map(task => isDateToday(task.date) ? task : axios.post('http://localhost:5000/istoday', {\n        taskid: task._id,\n        today: false\n      }));\n    } else {\n      tasks.map(task => axios.post('http://localhost:5000/istoday', {\n        taskid: task._id,\n        today: true\n      }));\n    }\n  };\n  function isDateToday(inputDate) {\n    const [inputYear, inputMonth, inputDay] = inputDate.split('-').map(Number);\n    const inputDateObj = new Date(inputYear, inputMonth - 1, inputDay);\n    const today = new Date();\n    const todayDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    return inputDateObj.getTime() === todayDateObj.getTime();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskManager\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [!isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addButton\",\n          onClick: () => setIsAdding(true),\n          children: \"\\xDAj feladat hozz\\xE1ad\\xE1sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputdata\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newTask.date,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newTask.text,\n            onChange: handleInputChange,\n            placeholder: \"Adj hozz\\xE1 egy feladatot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTask,\n            children: \"Hozz\\xE1ad\\xE1s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAdding(false),\n            children: \"M\\xE9gse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }, this), \"Mai hat\\xE1rid\\u0151\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => task.isToday && /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: task.completed ? 'green' : 'rgba(0,0,0,0)'\n          },\n          children: [!task.editing && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [task.text, \" | Hat\\xE1rid\\u0151: \", task.date, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskButtons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleComplete(task._id),\n                children: task.completed ? 'Visszaállítás' : 'Kész'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(task._id),\n                children: \"T\\xF6rl\\xE9s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTaskChange(task._id),\n                children: \"M\\xF3dos\\xEDt\\xE1s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 32\n          }, this), task.editing && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: deadline,\n              onChange: e => setDeadline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: taskText,\n              onChange: e => setTaskText(e.target.value),\n              rows: \"1\",\n              cols: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskButtons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTask(task._id),\n                children: \"Hozz\\xE1ad\\xE1s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTaskChange(task._id),\n                children: \"M\\xE9gse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 31\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TaskManager, \"bX5kNERulWSYHYpInddXgQinAXw=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","axios","require","TaskManager","_s","tasks","setTasks","newTask","setNewTask","date","text","completed","editing","isToday","taskText","setTaskText","deadline","setDeadline","isAdding","setIsAdding","isEditing","setIsEditing","fetchProducts","handleAddTask","post","error","console","handleInputChange","e","name","value","target","setNewProduct","newProduct","response","get","data","log","handleDeleteTask","id","window","confirm","taskid","handleEditTaskChange","thisTaskEditing","alert","handleEditTask","handleToggleComplete","handleCheckboxChange","event","checked","map","task","isDateToday","_id","today","inputDate","inputYear","inputMonth","inputDay","split","Number","inputDateObj","Date","todayDateObj","getFullYear","getMonth","getDate","getTime","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","backgroundColor","rows","cols","_c","$RefreshReg$"],"sources":["D:/School/referencia/webapp/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./TaskManager.css\"\r\nconst axios = require('axios');\r\n\r\nfunction TaskManager (){\r\n    const [tasks,setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState({\r\n      date:'',\r\n      text:'',\r\n      completed: false,\r\n      editing: false,\r\n      isToday: true\r\n    });\r\n    const [taskText, setTaskText] = useState('');\r\n    const [deadline,setDeadline] = useState('');\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n      fetchProducts();\r\n    }, []);\r\n\r\n    const handleAddTask = async () => {\r\n        try {\r\n          await axios.post('http://localhost:5000/tasks', newTask);\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n          fetchProducts();\r\n        } catch (error) {\r\n          console.error('Error adding task:', error);\r\n        }\r\n      };\r\n\r\n\r\n      const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewProduct({\r\n          ...newProduct,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n      const fetchProducts = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/tasks');\r\n          setTasks(response.data.data);\r\n          console.log(response); \r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      };\r\n    \r\n      const handleDeleteTask = async (id) => {\r\n        if (window.confirm(`Biztosan törölni szeretnéd?`)) {\r\n          await axios.post('http://localhost:5000/delete', {taskid: id});   \r\n        }  \r\n          fetchProducts();\r\n      };\r\n\r\n      const handleEditTaskChange = async (id) => {\r\n        setIsAdding(false)\r\n        const thisTaskEditing = await axios.get('http://localhost:5000/edittaaskchange', {taskid: id}); \r\n        if(isEditing && !thisTaskEditing.data.data){\r\n            alert(\"Fejezd be a jelenlegi módosításaidat!\")\r\n        }\r\n        else{\r\n          await axios.post('http://localhost:5000/edittaskchange', {taskid: id})\r\n        setIsEditing(!isEditing)\r\n        }\r\n      };\r\n\r\n      const handleEditTask = async (id) => {\r\n        setTasks(\r\n          await axios.post('http://localhost:5000/edittask', {taskid: id, text:taskText, date:deadline})\r\n          );\r\n          setIsEditing(false)\r\n          setTaskText('');\r\n          setDeadline('');\r\n      };\r\n    \r\n      const handleToggleComplete = async (id) => {\r\n        await axios.post('http://localhost:5000/togglecomplete', {taskid: id})\r\n      };\r\n\r\n      const handleCheckboxChange = async (event) => {\r\n        if(event.target.checked){\r\n                tasks.map((task) => \r\n                  isDateToday(task.date) \r\n                    ? task\r\n                    : axios.post('http://localhost:5000/istoday', {taskid: task._id,today:false})\r\n                )\r\n\r\n        }else{\r\n                tasks.map((task) => \r\n                  axios.post('http://localhost:5000/istoday', {taskid: task._id,today:true})\r\n                )\r\n        }\r\n\r\n      };\r\n\r\n      function isDateToday(inputDate) {\r\n       \r\n        const [inputYear, inputMonth, inputDay] = inputDate.split('-').map(Number);\r\n        const inputDateObj = new Date(inputYear, inputMonth - 1, inputDay);\r\n        const today = new Date();\r\n        const todayDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n      \r\n        \r\n        return inputDateObj.getTime() === todayDateObj.getTime();\r\n      }\r\n\r\n      \r\n\r\n    return(\r\n        <>\r\n        <div className='taskManager'>\r\n            <div className='inputs'>\r\n            {!isAdding && (\r\n                <button id='addButton' onClick={() => setIsAdding(true)}>Új feladat hozzáadása</button>\r\n            )}\r\n\r\n            {isAdding && (\r\n                    <div className='inputdata'>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={newTask.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <textarea\r\n                        value={newTask.text}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Adj hozzá egy feladatot\"\r\n                    />\r\n                    <button onClick={handleAddTask}>Hozzáadás</button>\r\n                    <button onClick={() => setIsAdding(false)}>Mégse</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <p><input\r\n                type=\"checkbox\"\r\n                onChange={handleCheckboxChange}\r\n                />\r\n                Mai határidő\r\n                </p>\r\n            <ul>\r\n        {tasks.map((task) => (\r\n            task.isToday && (\r\n          <li key={task.id} style={{ backgroundColor: task.completed ? 'green' : 'rgba(0,0,0,0)' }}>\r\n            {!task.editing && (<div>\r\n            {task.text } | Határidő: {task.date}\r\n            <div className='taskButtons'>\r\n            <button onClick={() => handleToggleComplete(task._id)}>\r\n              {task.completed ? 'Visszaállítás' : 'Kész'}\r\n            </button>\r\n            <button onClick={() => handleDeleteTask(task._id)}>Törlés</button>\r\n            <button onClick={() => handleEditTaskChange(task._id)}>Módosítás</button></div>\r\n            </div>)}\r\n            \r\n            {task.editing && (<div>\r\n                <input\r\n                        type=\"date\"\r\n                        value={deadline}\r\n                        onChange={(e) => setDeadline(e.target.value)}\r\n                    />\r\n                    <textarea\r\n                        value={taskText}\r\n                        onChange={(e) => setTaskText(e.target.value)}\r\n                        rows=\"1\" \r\n                        cols=\"30\" \r\n                    />\r\n                    <div className='taskButtons'>\r\n                    <button onClick={() =>handleEditTask(task._id)}>Hozzáadás</button>\r\n                    <button onClick={() => handleEditTaskChange(task._id)}>Mégse</button></div>\r\n                </div>)} \r\n          </li>\r\n          )\r\n        ))}\r\n      </ul>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TaskManager"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}