{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\referencia\\\\webapp\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./TaskManager.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskManager() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    date: '',\n    text: '',\n    completed: false,\n    editing: false,\n    isToday: true\n  });\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [taskData, setTaskData] = useState({\n    text: '',\n    date: ''\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const onetextinput = () => {\n    if (isAdding) {\n      setTasks(tasks.map(task => task._id !== 0 ? {\n        ...task,\n        editing: false\n      } : task));\n    }\n  };\n  const handleAddTask = async () => {\n    try {\n      await axios.post('http://localhost:5000/tasks', newTask);\n      setNewTask({\n        date: '',\n        text: '',\n        completed: false,\n        editing: false,\n        isToday: true\n      });\n      setTaskData({\n        text: '',\n        date: ''\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleInputChange = e => {\n    onetextinput();\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskData({\n      ...taskData,\n      [name]: value\n    });\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/tasks');\n      setTasks(response.data.data);\n      console.log(JSON.stringify(response.data.data));\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    if (window.confirm(`Biztosan törölni szeretnéd?`)) {\n      await axios.post('http://localhost:5000/delete', {\n        taskid: id\n      });\n    }\n    fetchTasks();\n  };\n  const handleEditTaskChange = id => {\n    const thisTask = tasks.find(task => task._id === id);\n    setIsAdding(false);\n    if (isEditing && !thisTask.editing) {\n      alert(\"Fejezd be a jelenlegi módosításaidat!\");\n    } else {\n      setTasks(tasks.map(task => task._id === id ? {\n        ...task,\n        editing: !task.editing\n      } : task));\n      setTaskData({\n        text: thisTask.text,\n        date: thisTask.date\n      });\n      setIsEditing(!isEditing);\n    }\n  };\n  const handleEditTask = async id => {\n    await axios.post('http://localhost:5000/edittask', {\n      taskid: id,\n      text: taskData.text,\n      date: taskData.date\n    });\n    setIsEditing(false);\n    handleEditTaskChange(id);\n    setTaskData({\n      text: '',\n      date: ''\n    });\n    setNewTask({\n      date: '',\n      text: '',\n      completed: false,\n      editing: false,\n      isToday: true\n    });\n    fetchTasks();\n  };\n  const handleToggleComplete = async id => {\n    setTasks(tasks.map(task => task._id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n    try {\n      await axios.post('http://localhost:5000/togglecomplete', {\n        taskid: id\n      });\n    } catch (error) {\n      console.error('Hiba történt a feladat állapotának módosításakor:', error);\n    }\n  };\n  const handleCheckboxChange = event => {\n    if (event.target.checked) {\n      setTasks(tasks.map(task => isDateToday(task.date) ? task : {\n        ...task,\n        isToday: false\n      }));\n    } else {\n      setTasks(tasks.map(task => ({\n        ...task,\n        isToday: true\n      })));\n    }\n  };\n  function isDateToday(inputDate) {\n    const [inputYear, inputMonth, inputDay] = inputDate.split('-').map(Number);\n    const inputDateObj = new Date(inputYear, inputMonth - 1, inputDay);\n    const today = new Date();\n    const todayDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    return inputDateObj.getTime() === todayDateObj.getTime();\n  }\n  const sortTasksByDate = tasks => {\n    return [...tasks].sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      return dateA - dateB;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskManager\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [!isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addButton\",\n          onClick: () => setIsAdding(true),\n          children: \"\\xDAj feladat hozz\\xE1ad\\xE1sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputdata\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: taskData.date,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"text\",\n            value: taskData.text,\n            onChange: handleInputChange,\n            placeholder: \"Adj hozz\\xE1 egy feladatot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTask,\n            children: \"Hozz\\xE1ad\\xE1s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAdding(false),\n            children: \"M\\xE9gse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this), \"Mai hat\\xE1rid\\u0151\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortTasksByDate(tasks).map(task => task.isToday && /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: task.completed ? 'green' : 'rgba(0,0,0,0)'\n          },\n          children: [!task.editing && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [task.text, \" | Hat\\xE1rid\\u0151: \", task.date, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskButtons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleComplete(task._id),\n                children: task.completed ? 'Visszaállítás' : 'Kész'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(task._id),\n                children: \"T\\xF6rl\\xE9s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTaskChange(task._id),\n                children: \"M\\xF3dos\\xEDt\\xE1s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 32\n          }, this), task.editing && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"date\",\n              type: \"date\",\n              value: taskData.date,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"text\",\n              value: taskData.text,\n              onChange: handleInputChange,\n              rows: \"1\",\n              cols: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskButtons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTask(task._id),\n                children: \"Hozz\\xE1ad\\xE1s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTaskChange(task._id),\n                children: \"M\\xE9gse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 31\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TaskManager, \"m5V3CaCjfKhJ2F325jG7C2gQ5s8=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskManager","_s","tasks","setTasks","newTask","setNewTask","date","text","completed","editing","isToday","isAdding","setIsAdding","isEditing","setIsEditing","taskData","setTaskData","fetchTasks","onetextinput","map","task","_id","handleAddTask","post","error","console","handleInputChange","e","name","value","target","response","get","data","log","JSON","stringify","handleDeleteTask","id","window","confirm","taskid","handleEditTaskChange","thisTask","find","alert","handleEditTask","handleToggleComplete","handleCheckboxChange","event","checked","isDateToday","inputDate","inputYear","inputMonth","inputDay","split","Number","inputDateObj","Date","today","todayDateObj","getFullYear","getMonth","getDate","getTime","sortTasksByDate","sort","a","b","dateA","dateB","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","backgroundColor","rows","cols","_c","$RefreshReg$"],"sources":["D:/School/referencia/webapp/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./TaskManager.css\"\r\nimport axios from 'axios';\r\n\r\nfunction TaskManager (){\r\n    const [tasks,setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState({\r\n      date:'',\r\n      text:'',\r\n      completed: false,\r\n      editing: false,\r\n      isToday: true\r\n    });\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [taskData, setTaskData] = useState({\r\n      text:'',\r\n      date:''\r\n    }); \r\n\r\n    useEffect(() => {\r\n      fetchTasks();\r\n    }, []);\r\n\r\n      const onetextinput = () => {\r\n        if(isAdding){\r\n          setTasks(\r\n            tasks.map((task) =>\r\n              task._id !== 0 ? { ...task, editing: false } : task\r\n            )\r\n          );\r\n        }\r\n      }\r\n\r\n    const handleAddTask = async () => {\r\n        try {\r\n          await axios.post('http://localhost:5000/tasks', newTask);\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n          setTaskData({\r\n            text:'',\r\n            date:''\r\n          });\r\n          fetchTasks();\r\n        } catch (error) {\r\n          console.error('Error adding task:', error);\r\n        }\r\n      };\r\n\r\n\r\n      const handleInputChange = (e) => {\r\n        \r\n      onetextinput();\r\n        const { name, value } = e.target;\r\n        setTaskData({\r\n          ...taskData,\r\n          [name]: value\r\n        })\r\n        setNewTask({\r\n          ...newTask,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n      const fetchTasks = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/tasks');\r\n          setTasks(response.data.data);\r\n          console.log(JSON.stringify(response.data.data)); \r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      };\r\n    \r\n      const handleDeleteTask = async (id) => {\r\n        if (window.confirm(`Biztosan törölni szeretnéd?`)) {\r\n          await axios.post('http://localhost:5000/delete', {taskid: id});   \r\n        }  \r\n          fetchTasks();\r\n      };\r\n\r\n      const handleEditTaskChange = (id) => {\r\n        const thisTask = tasks.find((task) => task._id === id);\r\n        setIsAdding(false)\r\n        if(isEditing && !thisTask.editing){\r\n            alert(\"Fejezd be a jelenlegi módosításaidat!\")\r\n        }\r\n        else{\r\n          \r\n        setTasks(\r\n            tasks.map((task) =>\r\n              task._id === id ? { ...task, editing: !task.editing } : task\r\n            )\r\n          );\r\n          setTaskData({text:thisTask.text,\r\n            date:thisTask.date});\r\n        setIsEditing(!isEditing)\r\n        }\r\n      };\r\n\r\n      const handleEditTask = async (id) => {\r\n        \r\n          await axios.post('http://localhost:5000/edittask', {taskid: id, text:taskData.text, date:taskData.date});\r\n          setIsEditing(false);\r\n          handleEditTaskChange(id);\r\n          setTaskData({\r\n            text:'',\r\n            date:''\r\n          });\r\n          setNewTask({\r\n            date:'',\r\n            text:'',\r\n            completed: false,\r\n            editing: false,\r\n            isToday: true\r\n          });\r\n          fetchTasks();\r\n      };\r\n    \r\n      \r\n      const handleToggleComplete = async (id) => {\r\n        \r\n        setTasks(\r\n          tasks.map((task) =>\r\n            task._id === id ? { ...task, completed: !task.completed } : task\r\n          )\r\n        );\r\n        try {\r\n          await axios.post('http://localhost:5000/togglecomplete', { taskid: id });\r\n        } catch (error) {\r\n          console.error('Hiba történt a feladat állapotának módosításakor:', error);\r\n        }\r\n        \r\n      };\r\n\r\n      const handleCheckboxChange = (event) => {\r\n        if(event.target.checked){\r\n            setTasks(\r\n                tasks.map((task) => \r\n                  isDateToday(task.date) \r\n                    ? task\r\n                    : { ...task, isToday: false }\r\n                )\r\n              );\r\n        }else{\r\n            setTasks(\r\n                tasks.map((task) => \r\n                    ({\r\n                        ...task,\r\n                        isToday: true\r\n                      })\r\n                )\r\n              );\r\n            \r\n        }\r\n\r\n      };\r\n      \r\n\r\n      function isDateToday(inputDate) {\r\n       \r\n        const [inputYear, inputMonth, inputDay] = inputDate.split('-').map(Number);\r\n        const inputDateObj = new Date(inputYear, inputMonth - 1, inputDay);\r\n        const today = new Date();\r\n        const todayDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n      \r\n        \r\n        return inputDateObj.getTime() === todayDateObj.getTime();\r\n      }\r\n\r\n      const sortTasksByDate = (tasks) => {\r\n        return [...tasks].sort((a, b) => {\r\n          const dateA = new Date(a.date);\r\n          const dateB = new Date(b.date);\r\n          return dateA - dateB;  \r\n        });\r\n      };\r\n\r\n      return(\r\n        <>\r\n        <div className='taskManager'>\r\n            <div className='inputs'>\r\n            {!isAdding && (\r\n                <button id='addButton' onClick={() => setIsAdding(true)}>Új feladat hozzáadása</button>\r\n            )}\r\n\r\n            {isAdding && (\r\n                    <div className='inputdata'>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        value={taskData.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <textarea\r\n                        name=\"text\"\r\n                        value={taskData.text}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Adj hozzá egy feladatot\"\r\n                    />\r\n                    <button onClick={handleAddTask}>Hozzáadás</button>\r\n                    <button onClick={() => setIsAdding(false)}>Mégse</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <p><input\r\n                type=\"checkbox\"\r\n                onChange={handleCheckboxChange}\r\n                />\r\n                Mai határidő\r\n                </p>\r\n            <ul>\r\n        {sortTasksByDate(tasks).map((task) => (\r\n            task.isToday && (\r\n          <li key={task._id} style={{ backgroundColor: task.completed ? 'green' : 'rgba(0,0,0,0)' }}>\r\n            {!task.editing && (<div>\r\n            {task.text } | Határidő: {task.date}\r\n            <div className='taskButtons'>\r\n            <button onClick={() => handleToggleComplete(task._id)}>\r\n              {task.completed ? 'Visszaállítás' : 'Kész'}\r\n            </button>\r\n            <button onClick={() => handleDeleteTask(task._id)}>Törlés</button>\r\n            <button onClick={() => handleEditTaskChange(task._id)}>Módosítás</button></div>\r\n            </div>)}\r\n            \r\n            {task.editing && (<div>\r\n                <input\r\n                        name=\"date\"\r\n                        type=\"date\"\r\n                        value={taskData.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <textarea\r\n                        name=\"text\"\r\n                        value={taskData.text}\r\n                        onChange={handleInputChange}\r\n                        rows=\"1\" \r\n                        cols=\"30\" \r\n                    />\r\n                    <div className='taskButtons'>\r\n                    <button onClick={() =>handleEditTask(task._id)}>Hozzáadás</button>\r\n                    <button onClick={() => handleEditTaskChange(task._id)}>Mégse</button></div>\r\n                </div>)} \r\n          </li>\r\n          )\r\n        ))}\r\n      </ul>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default TaskManager"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}